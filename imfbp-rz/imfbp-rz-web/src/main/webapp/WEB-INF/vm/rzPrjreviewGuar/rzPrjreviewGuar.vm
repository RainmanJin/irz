<title>rzPrjreviewGuar</title>
<style>
	.form-group .control-label{
		width:84px;
	}

</style>
<body>
<div id="rzPrjreviewGuarModule" >
	
	<!-- list page start -->
	<div class="listPage startPage">
		#parse("/WEB-INF/vm/rzPrjreviewGuar/rzPrjreviewGuarList.vm")
	</div>
	<!-- list page end -->
	
	<!-- edit page end -->
	<div class="rzPrjreviewGuarEdit" style="display:none;">
		#parse("/WEB-INF/vm/rzPrjreviewGuar/rzPrjreviewGuarEdit.vm")
	</div>
	<!-- edit page end -->
	
</div>


<script>

jQuery(function(){

	
	//列表后台访问地址
	var url_page = '$homeModule.getTarget('/rzPrjreviewGuar/getRzPrjreviewGuarByPage')';
	//添加修改后台访问地址
	var url_add = '$homeModule.getTarget('/rzPrjreviewGuar/insertOrUpdate')';
	//删除后台访问地址
	var url_del = '$homeModule.getTarget('/rzPrjreviewGuar/deleteRzPrjreviewGuarByBatchId')';
	//列表B
	var url_pageB = '$homeModule.getTarget('/rzPrjreviewGuarB/getRzPrjreviewGuarBByPage')';
	//批量修改
	var update_batch= '$homeModule.getTarget('/rzPrjreviewGuarB/updateByBatch')';
	
	var add_batch = '$homeModule.getTarget('/rzPrjreviewGuarB/addByBatch')';
	//查询对象
	var queryData = new RzPrjreviewGuarView();
	//编辑对象
	var editData = new RzPrjreviewGuarView();
	//空对象用来清空编辑和查询对象
	var emptyData = new RzPrjreviewGuarView();
	//查询对象
	var queryDataB = new RzPrjreviewGuarBView();
	//编辑对象
	var editDataB = new RzPrjreviewGuarBView();
	//空对象用来清空编辑和查询对象
	var emptyDataB = new RzPrjreviewGuarBView();
	window.viewModel={
		queryData:ko.mapping.fromJS(queryData),
		editData:ko.mapping.fromJS(editData),
		pageState:ko.observable(""),
		queryDataB:ko.mapping.fromJS(queryDataB),
		editDataB:ko.mapping.fromJS(editDataB),
		pageStateB:ko.observable("")
	}
	
	/**
	 * 表头
	 */
	var col = [{  
		field:"pkPrjreviewGuar",
		title:"担保人编码",
		imfbpRefType:'customerref',
        renderType:"imfbpRefTransform"
	},{
		field:"pkPrjreview",
		title:"担保人名称 ",
		imfbpRefType:'customerref',
        renderType:"imfbpRefTransform"
	},{
		field:"pkCustomer",
		title:"担保人类别"
	},{
		field:"guarType",
		title:"证件类型"
	},{
		field:"guarAmt",
		title:"证件号码"
	},{
		field:"enterpriseLegalPerson",
		title:"法人代表"
	},{
		field:"enterpriseAddr",
		title:"通信地址"
	},{
		field:"enterprisePostcode",
		title:"邮编"
	},{
		field:"guarReson",
		title:"担保方式",
		renderType:function(obj){
			var guarReson = obj.row.value.guarReson;
			var html = "";
            if (guarReson == 0|| guarReson == "0") {
                html += "<span><span >信用</span></span>";
            }else if(guarReson == 1|| guarReson == "1"){
            	html += "<span><span >质押</span></span>";
            }else if(guarReson == 2|| guarReson == "2"){
            	html += "<span><span >抵押</span></span>";
            }else if(guarReson == 3|| guarReson == "3"){
            	html += "<span><span >保证</span></span>";
            }else if(guarReson == 4|| guarReson == "4"){
            	html += "<span><span >综合担保</span></span>";
            }else{
            	html += "<span><span >其他</span></span>";
            }
            var innerDom = u.makeDOM(html);
            obj.element.appendChild(innerDom);
		}
	},{
		field:"guarReson",
		title:"担保金额"
	},{
		field:"guarReson",
		title:"抵押金额"
	},{
		field:"guarReson",
		title:"质押金额"
	},{
		field:"guarReson",
		title:"提供担保原因"
	},{
		field:"enterpriseContacts",
		title:"联系人"
	},{
		field:"enterpriseTelphone",
		title:"联系人电话"
	},{
		field:"enterpriseFax",
		title:"传真"
	},{
		field:"enterpriseMobilephone",
		title:"联系人手机"
	},{
		field:"enterpriseMail",
		title:"联系人邮箱"
	},{
		field:"remark",
		title:"备注"
 	}];
    
	/**
	 * 表头
	 */
	var colB = [{  
		field:"mortgageName",
		title:"抵质押物名称"
	},{
		field:"mortgageNum",
		title:"抵质押物数量"
	},{
		field:"mortgageQuality",
		title:"抵质押物质量"
	},{
		field:"mortgageState",
		title:"抵质押物状态",
		editable:false,
		renderType:function(obj){
			var rowIndex=obj.rowIndex;
			var html = "<span><select class='mortgageState' rowIndex='"+rowIndex+"' disabled='disabled' onchange='changeSelect(this)'>"
        		html += "<option value=0 >未抵押</option>"
       			html += "<option value=1 >已抵押</option>"
        		html += "<select></span>";
       		var innerDom = u.makeDOM(html);
       	 	obj.element.appendChild(innerDom);
       	//获取状态：通过状态判断更改相应代码 0 为未启动
        	var mortgageState = obj.row.value.mortgageState;
        	if ('0' == mortgageState){
        		$(".mortgageState").find("option[value='0']").attr("selected",true);
        	}else{
        		$(".mortgageState").find("option[value='1']").attr("selected",true);
        	}
		}
	},{
		field:"currVal",
		title:"当前估值"
	},{
		field:"address",
		title:"所在地"
	},{
		field:"prodDate",
		title:"出厂日期"
 	}];
	
	/**
     * 初始化layoutMDI
     */
	$("#rzPrjreviewGuarModule").layoutMDI({
		//当页面后退时候触发的事件
		onBackPage: function(target, options) {
			ko.mapping.fromJS(emptyData,viewModel.editData);
		} 
	});
	
	/**
     * 创建一个表格，但是没有赋值dataSource数据，这是表格将没有数据
	 */
	var gridObj = $("#rzPrjreviewGuarModule .rzPrjreviewGuarList").grid({
		dataSource:'',
    	id: 'case-g1',
   		keyField: 'id',
   		parentKeyField: 'pid',
    	multiSelect: false,
    	showNumCol:false,
    	height: 200,
    	columns: col,
    	onDblClickFun:function(gridObj,rowObj,rowIndex){
			//设置页面的输入框为不可修改
			viewModel.editData.enableState(false);
			//得到点击行
    		var dbClickRow = gridObj.rowObj;
    		viewModel.queryDataB.pkPrjreviewGuar(dbClickRow.value.pkPrjreviewGuar);
    		//赋值
    		ko.mapping.fromJS(dbClickRow.value, viewModel.editData);
    		//跳转到编辑页
        	$("#rzPrjreviewGuarModule").layoutMDI("go", ".rzPrjreviewGuarEdit");
        	jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBEditList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
    	},
    	
    	onRowSelected:onSelectOneRow
    });
	
	/**
	 * 初始化分页
	 */
	var paginationObj = $("#rzPrjreviewGuarModule .pagination").pagination({
		pageSize:5,
		styleMode:2,
		onSelectPage:function(pageNumber, pageSize){
			var queryData = $.extend(ko.mapping.toJS(viewModel.queryData),{pageNumber:pageNumber,pageSize:pageSize});
			jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarList").gridPlugin("reLoad",queryData);
		}
	});
	
	/**
	 * 初始化表格插件
	 */
	var gridPluginObj = jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarList").gridPlugin({
		url: url_page,
		gridObj:gridObj,
		queryParam:getParams(),
		pagination:true,//是否分页默认为否
		paginationObj:paginationObj,//分页控件对象
		initData:true,//初始化时候是否加载数据(true时候加载，false时候不加载)
		onDataSuccess:function(data){
			gridObj.setRowFocus(0);
		},
		onDataError:function(data){
			//当列表加载失败之后调用
		},
	})
	/**
	 * form表单插件
	 */
	jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarEditForm").formPlugin({
		url: url_add,//添加修改的地址
		gridPlugin:gridPluginObj,//表格插件对象
		onSaveSuccess:function(data){
			//保存成功后退出编辑页面
			
			$("#rzPrjreviewGuarModule").layoutMDI("back");
		},
		onSaveError:function(data){
			//保存失败回调事件
		},
		onSaveError:function(data){
			//保存失败回调事件
			jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarList").gridPlugin("load", {});
		},
		onDeleteSuccess:function(data){
			
		}
	})
	
	
	
	//////B表格
	/**
     * 创建一个表格，但是没有赋值dataSource数据，这是表格将没有数据
	 */
	var gridObjB = $("#rzPrjreviewGuarModule .rzPrjreviewGuarBList").grid({
		dataSource:'',
    	id: 'case-g2',
   		keyField: 'id',
   		parentKeyField: 'pid',
    	multiSelect: false,
    	showNumCol:true,
    	height: 200,
    	columns: colB,
    	onDblClickFun:function(gridObj,rowObj,rowIndex){
			//设置页面的输入框为不可修改
			viewModel.editDataB.enableState(false);
			//得到点击行
    		var dbClickRow = gridObj.rowObj;
    		//赋值
    		ko.mapping.fromJS(dbClickRow.value, viewModel.editDataB);
    	}
    });
	/**
	 * 初始化分页
	 */
	var paginationObjB = $("#rzPrjreviewGuarModule .pagination").pagination({
		pageSize:5,
		styleMode:2,
		onSelectPage:function(pageNumber, pageSize){
			var queryData = $.extend(ko.mapping.toJS(viewModel.queryData),{pageNumber:pageNumber,pageSize:pageSize});
			jQuery("#rzPrjreviewGuarBModule .rzPrjreviewGuarBList").gridPlugin("reLoad",queryData);
		}
	});
	
	/**
	 * 初始化表格插件
	 */
	var gridPluginObjB = jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBList").gridPlugin({
		url: url_pageB,
		gridObj:gridObjB,
		queryParam:getParams(),
		pagination:false,//是否分页默认为否
		paginationObj:paginationObjB,//分页控件对象
		initData:false,//初始化时候是否加载数据(true时候加载，false时候不加载)
		onDataSuccess:function(data){
			
		},
		onDataError:function(data){
			//当列表加载失败之后调用
		},
	})
	
	/**
	 * form表单插件
	 */
	jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBEditForm").formPlugin({
		url: url_add,//添加修改的地址
		gridPlugin:gridPluginObjB,//表格插件对象
		onSaveSuccess:function(data){
			//保存成功后退出编辑页面
			$("#rzPrjreviewGuarBModule").layoutMDI("back");
		},
		onSaveError:function(data){
			//保存失败回调事件
		},
		onSaveError:function(data){
			//保存失败回调事件
			jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBList").gridPlugin("load", {});
		},
		onDeleteSuccess:function(data){
			
		}
	})
	
		
	//////BEdit表格
	/**
     * 创建一个表格，但是没有赋值dataSource数据，这是表格将没有数据
	 */
	window.gridObjBEdit = $("#rzPrjreviewGuarModule .rzPrjreviewGuarBEditList").grid({
		dataSource:'',
    	id: 'case-g3',
   		keyField: 'id',
   		parentKeyField: 'pid',
    	multiSelect: false,
    	showNumCol:true,
    	height: 200,
    	columns: colB,
    	onDblClickFun:function(gridObj,rowObj,rowIndex){
			//设置页面的输入框为不可修改
			viewModel.editDataB.enableState(false);
			//得到点击行
    		var dbClickRow = gridObj.rowObj;
    		//赋值
    		ko.mapping.fromJS(dbClickRow.value, viewModel.editDataB);
    	},
    	onRowSelected:onChangeBSelect
    });
	/**
	 * 初始化分页
	 */
	var paginationObjBEdit = $("#rzPrjreviewGuarModule .pagination").pagination({
		pageSize:5,
		styleMode:2,
		onSelectPage:function(pageNumber, pageSize){
			var queryDataB = $.extend(ko.mapping.toJS(viewModel.queryDataB),{pageNumber:pageNumber,pageSize:pageSize});
			jQuery("#rzPrjreviewGuarBModule .rzPrjreviewGuarBEditList").gridPlugin("reLoad",queryDataB);
		}
	});
	
	/**
	 * 初始化表格插件
	 */
	var gridPluginObjBEdit = jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBEditList").gridPlugin({
		url: url_pageB,
		gridObj:gridObjBEdit,
		queryParam:getParams(),
		pagination:false,//是否分页默认为否
		paginationObj:paginationObjBEdit,//分页控件对象
		initData:false,//初始化时候是否加载数据(true时候加载，false时候不加载)
		onDataSuccess:function(data){
			var d = {};
			imfbpDataTableTranform(gridObj, data.rows,function(){
				d.values = data.rows;
				gridObj.setDataSource(d);
			});
		},
		onDataError:function(data){
			//当列表加载失败之后调用
		},
	})
	
	/**
	 * form表单插件
	 */
	jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBEditForm").formPlugin({
		url: url_add,//添加修改的地址
		gridPlugin:gridPluginObjBEdit,//表格插件对象
		onSaveSuccess:function(data){
			//保存成功后退出编辑页面
			$("#rzPrjreviewGuarBModule").layoutMDI("back");
		},
		onSaveError:function(data){
			//保存失败回调事件
		},
		onSaveError:function(data){
			//保存失败回调事件
			jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBList").gridPlugin("load", {});
		},
		onDeleteSuccess:function(data){
			
		}
	})
	
	//选中主表一行
	function onSelectOneRow(){
		var focusRowIndex = gridObj.getFocusRowIndex();
		if(focusRowIndex!=0){
			gridObj.setRowUnFocus(0);
		}
		var focusRow = gridObj.getFocusRow();
		viewModel.queryDataB.pkPrjreviewGuar(focusRow.pkPrjreviewGuar);
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
	}
	
	//改变选中行，若改行数据有主键，即不为新增状态，则可以编辑
	function onChangeBSelect(){
		
		 if(viewModel.pageStateB()=="add"){
			 var selectRows = gridObjBEdit.getSelectRows();
			 if(!selectRows[0].pkPrjreviewGuarB){
				 gridObjBEdit.setEditable(true);
				 $(".mortgageState").attr("disabled",false);
			 }else{
				 gridObjBEdit.setEditable(false);
				 $(".mortgageState").attr("disabled",true);
			 }
		 }
	}
	
	//////行编辑开始/////
    /**
	 * 行编辑保存方法
	 */	 
    jQuery("#rzPrjreviewGuarModule .footer-saveOrCancel .save-btn").click(function(){
    	$('.rzPrjreviewGuarEditForm').bootstrapValidator('validate');
		debugger;
		if(viewModel.editData.pkCustomer() != null && viewModel.editData.pkCustomer() != ""){
           var validator1 = $('.rzPrjreviewGuarEditForm').data('bootstrapValidator');
           validator1.updateStatus("pkCustomer", 'VALID' , null);
       } 
		//赋值
	    if(!$('.rzPrjreviewGuarEditForm').data('bootstrapValidator').isValid()) return;
    	var editArray=gridObjBEdit.dataSourceObj.options.values;
    	var rzPrjreviewGuarBArray=editArray;
		var pkPrjreview=viewModel.editData.pkPrjreview();
		var pkCustomer=viewModel.editData.pkCustomer();
		var guarType=viewModel.editData.guarType();
		var guarAmt=viewModel.editData.guarAmt();
		var mortgageAmt=viewModel.editData.mortgageAmt();
		var pledgeAmt=viewModel.editData.pledgeAmt();
		var guarReson=viewModel.editData.guarReson();
		var remark=viewModel.editData.remark();
    	if(viewModel.pageState()=="edit"){
    		var pkPrjreviewGuar=viewModel.editData.pkPrjreviewGuar();
    		jQuery.ajax({
      			 type: 'post',
      			 dataType: "json",
      			 contentType:'application/json;charset=utf-8',
      			 data:JSON.stringify({pkPrjreviewGuar:pkPrjreviewGuar,pkPrjreview:pkPrjreview,pkCustomer:pkCustomer,guarType:guarType,guarAmt:guarAmt,mortgageAmt:mortgageAmt,pledgeAmt:pledgeAmt,guarReson:guarReson,remark:remark,rzPrjreviewGuarBArray:rzPrjreviewGuarBArray}),
      			 url: url_add,
      			 success: function(data){
      				 if(data.success){
      					 if(viewModel.pageStateB()=="add"){//主表修改、子表增加
      						var selectRows = gridObj.getSelectRows();
      			    		var addArray=new Array();
      			        	for(var i=0;i<editArray.length;i++){
      			        		if(!editArray[i].pkPrjreviewGuarB){
      			        			editArray[i].pkPrjreviewGuar=selectRows[0].pkPrjreviewGuar;
      			        			editArray[i].pkPrjreview=selectRows[0].pkPrjreview;
      			        			addArray.push(editArray[i]);
      			        		}
      			        	}
      			        	jQuery.ajax({
      			    			 type: 'post',
      			    			 dataType: "json",
      			    			 contentType:'application/json;charset=utf-8',
      			    			 data:JSON.stringify(addArray),
      			    			 url:add_batch,
      			    			 success: function(data){
      			    				 if(data.success){
      			    					 $("#edit_msg_out").html("保存成功").show();
      			    					 setTimeout(function(){
      			    							$("#edit_msg_out").hide();
      			    					 },2000);
      			    				 }
      			    			 },
      			    			 error:function(data){
      			    				 
      			    			 }
      			    		  });
      					 }else if(viewModel.pageStateB()=="edit"){//主表修改、子表修改
      						 debugger;
      						jQuery.ajax({
      				   			 type: 'post',
      				   			 dataType: "json",
      				   			 contentType:'application/json;charset=utf-8',
      				   			 data:JSON.stringify(editArray),
      				   			 url:update_batch,
      				   			 success: function(data){
      				   				 if(data.success){
      				   					 $("#edit_msg_out").html("保存成功").show();
      				   					 setTimeout(function(){
      				   							$("#edit_msg_out").hide();
      				   					 },2000);
      				   				 }
      				   			 },
      				   			 error:function(data){
      				   				 
      				   			 }
      				   		 });
      					 }else{//仅修改主表
      						 $("#edit_msg_out").html("保存成功").show();
		   					 setTimeout(function(){
		   							$("#edit_msg_out").hide();
		   					 },2000);
      					 }
      				 }
      			 },
      			 error:function(data){
      			 }
      		  });
    	}else if(viewModel.pageState()=="add"){//增加只允许对子表做新增操作
    		jQuery.ajax({
     			 type: 'post',
     			 dataType: "json",
     			 contentType:'application/json;charset=utf-8',
     			 data:JSON.stringify({pkPrjreview:pkPrjreview,pkCustomer:pkCustomer,guarType:guarType,guarAmt:guarAmt,mortgageAmt:mortgageAmt,pledgeAmt:pledgeAmt,guarReson:guarReson,remark:remark,rzPrjreviewGuarBArray:rzPrjreviewGuarBArray}),
     			 url: url_add,
     			 success: function(data){
     				 if(data.success){
     					 $("#edit_msg_out").html("保存成功").show();
     					 setTimeout(function(){
     							$("#edit_msg_out").hide();
     					 },2000);
     				 }
     			 },
     			 error:function(data){
     				 
     			 }
     		  });
    	}
    });
    
    /**
	 * 行编辑修改功能
	 */		    
    jQuery("#rzPrjreviewGuarModule .toolsbarPanelB .update-btn").click(function(){
    	//设置页面的输入框可以输入
		viewModel.editDataB.enableState(true);
		//设置页面为修改状态
		viewModel.pageStateB(pageState.edit);
		gridObjBEdit.setEditable(true);
		$(".mortgageState").attr("disabled",false);
    });
    /**
	 * 行编辑新增功能
	 */			
    jQuery("#rzPrjreviewGuarModule .toolsbarPanelB .add-btn").click(function(){
		//设置页面为添加状态
		viewModel.pageStateB(pageState.add);
		var addData={}
		addData.mortgageName="";
		addData.mortgageNum="";
		addData.mortgageQuality="";
		addData.mortgageState="";
		addData.currVal="";
		addData.address="";
		addData.prodDate="";
		addData.situation="";
		gridObjBEdit.addOneRow(addData);
		gridObjBEdit.setRowSelect(0);
		gridObjBEdit.setEditable(true);
    });
    
  	/////行编辑结束///// 
  	
    
    
	/**
	 * 新增功能
	 */			
    jQuery("#rzPrjreviewGuarModule .toolsbarPanel .addguar-btn").click(function(){
    	//设置页面的输入框可以输入
		viewModel.editDataB.enableState(true);
		//设置页面为添加状态
		viewModel.pageState(pageState.add);
		gridObjBEdit.setDataSource("");
		//跳转到编辑页面
		var defaultData = [];
	        imfbpDataTableTranform(gridObj, defaultData, function(){
	            refManager.initAreaLoadData(".rzPrjreviewGuarEditForm", function(name){
	                var fun = viewModel.editData[name];
	                if(typeof fun == 'function'){
	                    return fun();
	                }
	            });
	        });
	        refManager.setRefArea(".rzPrjreviewGuarEditForm");
        $("#rzPrjreviewGuarModule").layoutMDI("go", ".rzPrjreviewGuarEdit");
        validatorForm();
    });

	/**
	 * 修改功能
	 */		    
    jQuery("#rzPrjreviewGuarModule .toolsbarPanel .update-btn").click(function(){
    	//设置页面的输入框可以输入
		viewModel.editData.enableState(true);
		//设置页面为修改状态
		viewModel.pageState(pageState.edit);
    	//当前选中行
    	var selectRow = gridObj.getSelectRows();
    	//将数据绑定到表单上面
    	ko.mapping.fromJS(selectRow[0], viewModel.editData);
		viewModel.queryDataB.pkPrjreviewGuar(selectRow[0].pkPrjreviewGuar);
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBEditList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
    	//跳转到编辑页面
    	refManager.setRefArea(".rzPrjreviewGuarEditForm");
        refManager.initAreaLoadData(".rzPrjreviewGuarEditForm", function(name){
            var fun = viewModel.editData[name];
            if(typeof fun == 'function'){
                return fun();
            }
        });
        $("#rzPrjreviewGuarModule").layoutMDI("go", ".rzPrjreviewGuarEdit");
        validatorForm();
    });

	/**
	 * 删除功能
	 */	    
    jQuery("#rzPrjreviewGuarModule .toolsbarPanelB .delete-btn").click(function(){
    	//要删除的id用","隔开
		var batchId = "";
		//当前选中行
		var selectRow = gridObj.getSelectRows();
		//判断是否选中要删除的数据
		if(selectRow.length == 0) {
			alert("请选择您要修改的数据");
			return;
		}
	
		for(var i = 0; i < selectRow.length; i++) {
			var row = selectRow[i];
			if(i == 0) {
				batchId = row["pkPrjreviewGuar"] + batchId;
			} else {
				batchId = row["pkPrjreviewGuar"] + "," + batchId;
			}
		}
		//删除数据
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarEditForm").formPlugin("remove",{batchId:batchId,url:url_del});
    });
    
    /**
	 * 刷新功能(只是刷新当前页，如果要刷新所有页面使用 load 方法)
	 */	 
    jQuery("#rzPrjreviewGuarModule .toolsbarPanel .refresh-btn").click(function(){
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarList").gridPlugin("reLoad",viewModel.queryData);
    });
    
	//查找功能
	jQuery("#rzPrjreviewGuarModule .searchToolsbar .search-btn").click(function(){
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarList").gridPlugin("load",ko.mapping.toJS(viewModel.queryData));
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarBList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
	});
	
	//重置查询条件功能
	jQuery("#rzPrjreviewGuarModule .searchToolsbar .reset-btn").click(function(){
		ko.mapping.fromJS(emptyData,viewModel.queryData);
	});
	
	//编辑页返回
	jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarEdit .back-btn").click(function(){
		$("#rzPrjreviewGuarModule").layoutMDI("back");
		jQuery("#rzPrjreviewGuarModule .rzPrjreviewGuarList").gridPlugin("reLoad",viewModel.queryData);
	});
	

	ko.applyBindings(viewModel);
	
	{
		buttonManager.addBtn({button:".delete-btn",permission:['0']});
		buttonManager.addBtn({button:".addguar-btn",permission:['0']});
		buttonManager.addBtn({button:".addguarb-btn",permission:['0']});
		buttonManager.permission("${approvestatus.approvestatus}");
	} 
	
});

function RzPrjreviewGuarView(){
	//主键
	this.pkPrjreviewGuar="";
	//项目评审主键  
	this.pkPrjreview='${pkPrjreview}';
	//担保人（客户主键）
	this.pkCustomer="";
	//担保方式：0 信用、1 质押、2 抵押、3 保证、4 综合担保、5 其他
	this.guarType="";
	//担保金额
	this.guarAmt="";
	//抵押金额
	this.mortgageAmt="";
	//质押金额
	this.pledgeAmt="";
	//提供担保原因
	this.guarReson="";
	//备注
	this.remark="";
	//编辑页面状态
	this.enableState=true;
	this.enterpriseName="";
	this.enterpriseLegalPerson="";
	this.enterprisePersonIdentificationNo="";
	this.enterpriseAddr="";
	this.enterprisePostcode="";
	this.enterpriseContacts="";
	this.enterpriseTelphone="";
	this.enterpriseFax="";
	this.enterpriseMobilephone="";
	this.enterpriseMail="";
	
}

function RzPrjreviewGuarBView(){
	//主键
	this.pkPrjreviewGuarB="";
	//担保方信息主表主键
	this.pkPrjreviewGuar= "";
	//项目评审主键  
	this.pkPrjreview='${pkPrjreview}';
	//抵质押物数量
	this.mortgageNum="";
	//抵质押物质量
	this.mortgageQuality="";
	//抵质押物状态：0 未抵押、 1 已抵押
	this.mortgageState="";
	//
	this.situation="";
	//当前估值
	this.currVal="";
	//所在地
	this.address="";
	//抵质押物名称
	this.mortgageName="";
	//出厂日期
	this.prodDate="";
	//编辑页面状态
	this.enableState=true;
	this.userName="";
}

function getParams(selector){
	return {pkPrjreview:'${pkPrjreview}'};
}

//抵押物状态select切换
function changeSelect(obj){
		debugger;
	var rowIndex=$(obj).attr('rowIndex');
	var value= $(obj).val();
	gridObjBEdit.updateValueAt(rowIndex,"mortgageState",value,true)
}

function imfbpRefTransform2(oThis){

    //值
	var value = oThis.value;
	//字段
	var field = oThis.gridCompColumn.options.field;
/*	//字段对应的元数据
	var meta = oThis.gridObj.dataTable.meta;*/
	//参照
	var ref = oThis.gridCompColumn.options.imfbpRefType;
	var refData = refManager.queryDataSrc(ref,value,false);
	//设置参照数据
	if(refData){
		oThis.element.innerHTML = refData["userIdentificationNo"];
		$(oThis.element).attr('title', refData["userIdentificationNo"]);
	}
}

function customerRefCallFunction(eleObj, data, name, id) {
	debugger;
    var fun = viewModel.editData[name];
    if(typeof fun == 'function'){
        fun(data[id]);
    }
	ko.mapping.fromJS(data,viewModel.editData);
}

<!--校验输入框-->
function validatorForm() {
 if($('.rzPrjreviewGuarEditForm').data('bootstrapValidator')!=null)  $(".rzPrjreviewGuarEditForm").data('bootstrapValidator').destroy();
    $('.rzPrjreviewGuarEditForm').bootstrapValidator({
        message: 'This value is not valid',
        feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        },
        fields: {
        	pkCustomer : {
                message: '不能为空',
                validators: {
                    notEmpty: {
                        message: '不能为空'
                    },
                }
            },  
        }
    });
}
</script>
	
</body>