<title>rzPrjcontrChgGuar</title>
<body>
<div id="rzPrjcontrChgGuarModule" >
	
	<!-- list page start -->
	<div class="listPage startPage">
		#parse("/WEB-INF/vm/rzPrjcontrChgGuar/rzPrjcontrChgGuarList.vm")
	</div>
	<!-- list page end -->
	
	<!-- edit page end -->
	<div class="rzPrjcontrChgGuarEdit" style="display:none;">
		#parse("/WEB-INF/vm/rzPrjcontrChgGuar/rzPrjcontrChgGuarEdit.vm")
	</div>
	<!-- edit page end -->
	
</div>


<script>

jQuery(function(){

	
	//列表后台访问地址
	var url_page = '$homeModule.getTarget('/rzPrjcontrChgGuar/getRzPrjcontrChgGuarByPage')';
	//添加修改后台访问地址
	var url_add = '$homeModule.getTarget('/rzPrjcontrChgGuar/insertOrUpdate')';
	//删除后台访问地址
	var url_del = '$homeModule.getTarget('/rzPrjcontrChgGuar/deleteRzPrjcontrChgGuarByBatchId')';

    //子表列表
    var url_pageB = '$homeModule.getTarget('/rzPrjcontrChgGuarB/getRzPrjcontrChgGuarBByPage')';
    //批量增加子表
    var add_batch = '$homeModule.getTarget('/rzPrjcontrChgGuarB/addByBatch')';
    //批量修改
    var update_batch= '$homeModule.getTarget('/rzPrjcontrChgGuarB/updateByBatch')';
	
	//查询对象
	var queryData = new RzPrjcontrChgGuarView();
	//编辑对象
	var editData = new RzPrjcontrChgGuarView();
	//空对象用来清空编辑和查询对象
	var emptyData = new RzPrjcontrChgGuarView();

    //查询对象
    var queryDataB = new RzPrjcontrChgGuarBView();
    //编辑对象
    var editDataB = new RzPrjcontrChgGuarBView();
    //空对象用来清空编辑和查询对象
    var emptyDataB = new RzPrjcontrChgGuarBView();
	
	window.viewModel={
		queryData:ko.mapping.fromJS(queryData),
		editData:ko.mapping.fromJS(editData),
		pageState:ko.observable(""),
        queryDataB:ko.mapping.fromJS(queryDataB),
        editDataB:ko.mapping.fromJS(editDataB),
        pageStateB:ko.observable("")
	}
	
	/**
	 * 表头
	 */
	var col = [{  
		field:"pkPrjcontrChgGuar",
		title:"主键",
		visible:false
	},{
		field:"pkPrjcontrChg",
		title:"合同变更主键",
        visible:false
	},{
		field:"pkCustomer",
		title:"担保人",
        imfbpRefType:'customerref',
        renderType:"imfbpRefTransform"
	},{
		field:"guarType",
		title:"担保方式",
        renderType: function (obj) {
            var html = "<span>"
            //获取状态：通过状态判断更改相应代码0 信用、1 质押、2 抵押、3 保证、4 综合担保、5 其他
            var state = obj.row.value.guarType;
            if (0 == state ) {
                html += "信用";
            }else if(1 == state){
                html += "质押";
            }else if(2 == state){
                html += "抵押";
            }else if(3 == state){
                html += "保证";
            }else if(4 == state){
                html += "综合担保";
            }else{
                html += "其他";
            }
            html += "</span>";
            var innerDom = u.makeDOM(html);
            obj.element.appendChild(innerDom);
        }
	},{
		field:"guarAmt",
		title:"担保金额"
	},{
		field:"mortgageAmt",
		title:"抵押金额"
	},{
		field:"pledgeAmt",
		title:"质押金额"
	},{
		field:"guarReson",
		title:"提供担保原因"
	},{
		field:"isOri",
		title:"是否原值"
	},{
		field:"remark",
		title:"备注"
 	}];
    
	
	/**
     * 初始化layoutMDI
     */
	$("#rzPrjcontrChgGuarModule").layoutMDI({
		//当页面后退时候触发的事件
		onBackPage: function(target, options) {
			ko.mapping.fromJS(emptyData,viewModel.editData);
		} 
	});
	
	/**
     * 创建一个表格，但是没有赋值dataSource数据，这是表格将没有数据
	 */
	var gridObj = $("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarList").grid({
		dataSource:'',
    	id: 'case-g1',
   		keyField: 'id',
   		parentKeyField: 'pid',
    	multiSelect: false,
    	showNumCol:true,
    	height: 200,
    	columns: col,
    	onDblClickFun:function(gridObj,rowObj,rowIndex){
			//设置页面的输入框为不可修改
			viewModel.editData.enableState(false);
			//得到点击行
    		var dbClickRow = gridObj.rowObj;
    		//赋值
    		ko.mapping.fromJS(dbClickRow.value, viewModel.editData);
            viewModel.queryDataB.pkPrjcontrChgGuar = dbClickRow.value.pkPrjcontrChgGuar;
            jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBEditList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
            //设置参照区域
            refManager.setRefArea(".rzPrjcontrChgGuarEditForm");
            refManager.initAreaLoadData(".rzPrjcontrChgGuarEditForm", function(name){
                var fun = viewModel.editData[name];
                if(typeof fun == 'function'){
                    return fun();
                }
            });
    		//跳转到编辑页
        	$("#rzPrjcontrChgGuarModule").layoutMDI("go", ".rzPrjcontrChgGuarEdit");
    	},
        onRowSelected:onSelectOneRow
    });
	
	/**
	 * 初始化分页
	 */
	var paginationObj = $("#rzPrjcontrChgGuarModule .pagination").pagination({
		pageSize:10,
		styleMode:2,
		onSelectPage:function(pageNumber, pageSize){
			var queryData = $.extend(ko.mapping.toJS(viewModel.queryData),{pageNumber:pageNumber,pageSize:pageSize});
			jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarList").gridPlugin("reLoad",queryData);
		}
	});
	
	/**
	 * 初始化表格插件
	 */
	var gridPluginObj = jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarList").gridPlugin({
		url: url_page,
		gridObj:gridObj,
		queryParam:getParams(),
		pagination:true,//是否分页默认为否
		paginationObj:paginationObj,//分页控件对象
		initData:true,//初始化时候是否加载数据(true时候加载，false时候不加载)
		onDataSuccess:function(data){
			//当列表加载成功之后调用
            imfbpDataTableTranform(gridObj, data.rows,function(){
                var d = {};
                d.values = data.rows;
                gridObj.setDataSource(d);
                gridObj.setRowFocus(0);
            });
            if(data.rows.length > 0){
                gridObj.setRowFocus(0);
            }
		},
		onDataError:function(data){
			//当列表加载失败之后调用
		},
	})
	
	/**
	 * form表单插件
	 */
	jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarEditForm").formPlugin({
		url: url_add,//添加修改的地址
		gridPlugin:gridPluginObj,//表格插件对象
		onSaveSuccess:function(data){
			//保存成功后退出编辑页面
			$("#rzPrjcontrChgGuarModule").layoutMDI("back");
		},
		onSaveError:function(data){
			//保存失败回调事件
		},
		onSaveError:function(data){
			//保存失败回调事件
			jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarList").gridPlugin("load", {});
		},
		onDeleteSuccess:function(data){
			
		}
	})

    /**
     * 表头
     */
    var colB = [{
        field:"mortgageName",
        title:"抵质押物名称"
    },{
        field:"mortgageNum",
        title:"抵质押物数量"
    },{
        field:"mortgageQuality",
        title:"抵质押物质量"
    },{
        field:"mortgageState",
        title:"抵质押物状态",
        editable:false,
        renderType:function(obj){
            var rowIndex=obj.rowIndex;
            var html = "<span><select class='mortgageState' rowIndex='"+rowIndex+"' disabled='disabled' onchange='changeSelect(this)'>"
            html += "<option value=0 >未抵押</option>"
            html += "<option value=1 >已抵押</option>"
            html += "<select></span>";
            var innerDom = u.makeDOM(html);
            obj.element.appendChild(innerDom);
            //获取状态：通过状态判断更改相应代码 0 为未启动
            var mortgageState = obj.row.value.mortgageState;
            if ('0' == mortgageState){
                $(".mortgageState").find("option[value='0']").attr("selected",true);
            }else{
                $(".mortgageState").find("option[value='1']").attr("selected",true);
            }
        }
    },{
        field:"currVal",
        title:"当前估值"
    },{
        field:"address",
        title:"所在地"
    },{
        field:"prodDate",
        title:"出厂日期"
    },{
        field:"situation",
        title:"抵押状态"
    }];

    //子表列表表格
    /**
     * 创建一个表格，但是没有赋值dataSource数据，这是表格将没有数据
     */
    var gridObjB = $("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBList").grid({
        dataSource:'',
        id: 'case-g2',
        keyField: 'id',
        parentKeyField: 'pid',
        multiSelect: false,
        showNumCol:true,
        height: 200,
        columns: colB,
        onDblClickFun:function(gridObj,rowObj,rowIndex){
            //设置页面的输入框为不可修改
            viewModel.editDataB.enableState(false);
            //得到点击行
            var dbClickRow = gridObj.rowObj;
            //赋值
            ko.mapping.fromJS(dbClickRow.value, viewModel.editDataB);
        }
    });
    /**
     * 初始化分页
     */
    var paginationObjB = $("#rzPrjcontrChgGuarModule .pagination").pagination({
        pageSize:5,
        styleMode:2,
        onSelectPage:function(pageNumber, pageSize){
            var queryData = $.extend(ko.mapping.toJS(viewModel.queryData),{pageNumber:pageNumber,pageSize:pageSize});
            jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBList").gridPlugin("reLoad",queryData);
        }
    });

    /**
     * 初始化表格插件
     */
    var gridPluginObjB = jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBList").gridPlugin({
        url: url_pageB,
        gridObj:gridObjB,
        queryParam:getParams(),
        pagination:false,//是否分页默认为否
        paginationObj:paginationObj,//分页控件对象
        initData:false,//初始化时候是否加载数据(true时候加载，false时候不加载)
        onDataSuccess:function(data){

        },
        onDataError:function(data){
            //当列表加载失败之后调用
        },
    })

    /**
     * form表单插件
     */
    jQuery("#rzPrjcontrChgGuarModule .rzPrjreviewGuarBEditForm").formPlugin({
        url: url_add,//添加修改的地址
        gridPlugin:gridPluginObjB,//表格插件对象
        onSaveSuccess:function(data){
            //保存成功后退出编辑页面
            $("#rzPrjcontrGuarModule").layoutMDI("back");
        },
        onSaveError:function(data){
            //保存失败回调事件
        },
        onSaveError:function(data){
            //保存失败回调事件
            jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBList").gridPlugin("load", {});
        },
        onDeleteSuccess:function(data){

        }
    })

    //子表卡片表格
    /**
     * 创建一个表格，但是没有赋值dataSource数据，这是表格将没有数据
     */
    window.gridObjBEdit = $("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBEditList").grid({
        dataSource:'',
        id: 'case-g3',
        keyField: 'id',
        parentKeyField: 'pid',
        multiSelect: false,
        showNumCol:true,
        height: 200,
        columns: colB,
        onDblClickFun:function(gridObj,rowObj,rowIndex){
            //设置页面的输入框为不可修改
            viewModel.editDataB.enableState(false);
            //得到点击行
            var dbClickRow = gridObj.rowObj;
            //赋值
            ko.mapping.fromJS(dbClickRow.value, viewModel.editDataB);
        },
        onRowSelected:onChangeBSelect
    });
    /**
     * 初始化分页
     */
    var paginationObjBEdit = $("#rzPrjcontrChgGuarModule .pagination").pagination({
        pageSize:5,
        styleMode:2,
        onSelectPage:function(pageNumber, pageSize){
            var queryDataB = $.extend(ko.mapping.toJS(viewModel.queryDataB),{pageNumber:pageNumber,pageSize:pageSize});
            jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBEditList").gridPlugin("reLoad",queryDataB);
        }
    });

    /**
     * 初始化表格插件
     */
    var gridPluginObjBEdit = jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBEditList").gridPlugin({
        url: url_pageB,
        gridObj:gridObjBEdit,
        queryParam:getParams(),
        pagination:false,//是否分页默认为否
        paginationObj:paginationObjBEdit,//分页控件对象
        initData:false,//初始化时候是否加载数据(true时候加载，false时候不加载)
        onDataSuccess:function(data){

        },
        onDataError:function(data){
            //当列表加载失败之后调用
        },
    })

    /**
     * form表单插件
     */
    jQuery("#rzPrjcontrChgGuarModule .rzPrjreviewGuarBEditForm").formPlugin({
        url: url_add,//添加修改的地址
        gridPlugin:gridPluginObjBEdit,//表格插件对象
        onSaveSuccess:function(data){
            //保存成功后退出编辑页面
            $("#rzPrjcontrGuarModule").layoutMDI("back");
        },
        onSaveError:function(data){
            //保存失败回调事件
        },
        onSaveError:function(data){
            //保存失败回调事件
            jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBEditList").gridPlugin("load", {});
        },
        onDeleteSuccess:function(data){

        }
    })

    //选中主表一行
    function onSelectOneRow(){
        var focusRowIndex = gridObj.getFocusRowIndex();
        if(focusRowIndex!=0){
            gridObj.setRowUnFocus(0);
        }
        var focusRow = gridObj.getFocusRow();
        viewModel.queryDataB.pkPrjcontrChgGuar(focusRow.pkPrjcontrChgGuar);
        jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
    }

    //改变选中行，若改行数据有主键，即不为新增状态，则可以编辑
    function onChangeBSelect(){

        if(viewModel.pageStateB()=="add"){
            var selectRows = gridObjBEdit.getSelectRows();
            if(!selectRows[0].pkPrjcontrChgGuarB){
                gridObjBEdit.setEditable(true);
                $(".mortgageState").attr("disabled",false);
            }else{
                gridObjBEdit.setEditable(false);
                $(".mortgageState").attr("disabled",true);
            }
        }
    }

    //////行编辑开始/////
    /**
     * 行编辑保存方法
     */
    jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarEdit .save-btn").click(function(){
        debugger;
        var editArray=gridObjBEdit.dataSourceObj.options.values;
        var rzPrjcontrChgGuarBs=editArray;
        var pkPrjcontrChg=viewModel.editData.pkPrjcontrChg();
        var pkCustomer=viewModel.editData.pkCustomer();
        var guarType=viewModel.editData.guarType();
        var guarAmt=viewModel.editData.guarAmt();
        var mortgageAmt=viewModel.editData.mortgageAmt();
        var pledgeAmt=viewModel.editData.pledgeAmt();
        var guarReson=viewModel.editData.guarReson();
        var remark=viewModel.editData.remark();
        if(viewModel.pageState()=="edit"){
            var pkPrjcontrChgGuar=viewModel.editData.pkPrjcontrChgGuar();
            jQuery.ajax({
                type: 'post',
                dataType: "json",
                contentType:'application/json;charset=utf-8',
                data:JSON.stringify({pkPrjcontrChgGuar:pkPrjcontrChgGuar,pkPrjcontrChg:pkPrjcontrChg,pkCustomer:pkCustomer,guarType:guarType,guarAmt:guarAmt,mortgageAmt:mortgageAmt,pledgeAmt:pledgeAmt,guarReson:guarReson,remark:remark,rzPrjcontrChgGuarBs:rzPrjcontrChgGuarBs}),
                url: url_add,
                success: function(data){
                    if(data.success){
                        if(viewModel.pageStateB()=="add"){//主表修改、子表增加
                            var selectRows = gridObj.getSelectRows();
                            var addArray=new Array();
                            for(var i=0;i<editArray.length;i++){
                                if(!editArray[i].pkPrjcontrGuarB){
                                    editArray[i].pkPrjcontrChgGuar=selectRows[0].pkPrjcontrChgGuar;
                                    editArray[i].pkPrjcontrChg=selectRows[0].pkPrjcontrChg;
                                    addArray.push(editArray[i]);
                                }
                            }
                            jQuery.ajax({
                                type: 'post',
                                dataType: "json",
                                contentType:'application/json;charset=utf-8',
                                data:JSON.stringify(addArray),
                                url:add_batch,
                                success: function(data){
                                    if(data.success){
                                        $("#edit_msg_out").html("保存成功").show();
                                        setTimeout(function(){
                                            $("#edit_msg_out").hide();
                                        },2000);
                                    }
                                },
                                error:function(data){

                                }
                            });
                        }else if(viewModel.pageStateB()=="edit"){//主表修改、子表修改
                            debugger;
                            jQuery.ajax({
                                type: 'post',
                                dataType: "json",
                                contentType:'application/json;charset=utf-8',
                                data:JSON.stringify(editArray),
                                url:update_batch,
                                success: function(data){
                                    if(data.success){
                                        $("#edit_msg_out").html("保存成功").show();
                                        setTimeout(function(){
                                            $("#edit_msg_out").hide();
                                        },2000);
                                    }
                                },
                                error:function(data){

                                }
                            });
                        }else{//仅修改主表
                            $("#edit_msg_out").html("保存成功").show();
                            setTimeout(function(){
                                $("#edit_msg_out").hide();
                            },2000);
                        }
                    }
                },
                error:function(data){
                }
            });
        }else if(viewModel.pageState()=="add"){//增加只允许对子表做新增操作
            jQuery.ajax({
                type: 'post',
                dataType: "json",
                contentType:'application/json;charset=utf-8',
                data:JSON.stringify({pkPrjcontrChg:pkPrjcontrChg,pkCustomer:pkCustomer,guarType:guarType,guarAmt:guarAmt,mortgageAmt:mortgageAmt,pledgeAmt:pledgeAmt,guarReson:guarReson,remark:remark,rzPrjcontrChgGuarBs:rzPrjcontrChgGuarBs}),
                url: url_add,
                success: function(data){
                    if(data.success){
                        $("#edit_msg_out").html("保存成功").show();
                        setTimeout(function(){
                            $("#edit_msg_out").hide();
                        },2000);
                    }
                },
                error:function(data){

                }
            });
        }
    });

    /**
     * 行编辑修改功能
     */
    jQuery("#rzPrjcontrChgGuarModule .toolsbarPanelB .update-btn").click(function(){
        //设置页面的输入框可以输入
        viewModel.editDataB.enableState(true);
        //设置页面为修改状态
        viewModel.pageStateB(pageState.edit);
        gridObjBEdit.setEditable(true);
        $(".mortgageState").attr("disabled",false);
    });
    /**
     * 行编辑新增功能
     */
    jQuery("#rzPrjcontrChgGuarModule .toolsbarPanelB .add-btn").click(function(){
        //设置页面为添加状态
        viewModel.pageStateB(pageState.add);
        var addData={}
        addData.mortgageName="";
        addData.mortgageNum="";
        addData.mortgageQuality="";
        addData.mortgageState="";
        addData.currVal="";
        addData.address="";
        addData.prodDate="";
        addData.situation="";
        gridObjBEdit.addOneRow(addData);
        gridObjBEdit.setRowSelect(0);
        gridObjBEdit.setEditable(true);
    });

    /////行编辑结束/////
	
	/**
	 * 新增功能
	 */			
    jQuery("#rzPrjcontrChgGuarModule .toolsbarPanel .add-btn").click(function(){
    	//设置页面的输入框可以输入
		viewModel.editData.enableState(true);
		//设置页面为添加状态
		viewModel.pageState(pageState.add);
        refManager.initAreaLoadData(".rzPrjcontrChgGuarEditForm", function(name){
            var fun = viewModel.editData[name];
            if(typeof fun == 'function'){
                return fun();
            }
        });
        //设置参照区域
        refManager.setRefArea(".rzPrjcontrChgGuarEditForm");
        $("#rzPrjcontrChgGuarModule").layoutMDI("go", ".rzPrjcontrChgGuarEdit");
    });

	/**
	 * 修改功能
	 */		    
    jQuery("#rzPrjcontrChgGuarModule .toolsbarPanel .update-btn").click(function(){
    	//设置页面的输入框可以输入
		viewModel.editData.enableState(true);
		//设置页面为修改状态
		viewModel.pageState(pageState.edit);
    	//当前选中行
    	var selectRow = gridObj.getSelectRows();
    	//将数据绑定到表单上面
    	ko.mapping.fromJS(selectRow[0], viewModel.editData);
        viewModel.queryDataB.pkPrjcontrChgGuar(selectRow[0].pkPrjcontrChgGuar);
        jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarBEditList").gridPlugin("load",ko.mapping.toJS(viewModel.queryDataB));
        refManager.initAreaLoadData(".rzPrjcontrChgGuarEditForm", function(name){
            var fun = viewModel.editData[name];
            if(typeof fun == 'function'){
                return fun();
            }
        });
        //设置参照区域
        refManager.setRefArea(".rzPrjcontrChgGuarEditForm");
    	//跳转到编辑页面
        $("#rzPrjcontrChgGuarModule").layoutMDI("go", ".rzPrjcontrChgGuarEdit");
    });

	/**
	 * 删除功能
	 */	    
    jQuery("#rzPrjcontrChgGuarModule .toolsbarPanel .remove-btn").click(function(){
    	//要删除的id用","隔开
		var batchId = "";
		//当前选中行
		var selectRow = gridObj.getSelectRows();
		//判断是否选中要删除的数据
		if(selectRow.length == 0) {
			alert("请选择您要修改的数据");
			return;
		}
	
		for(var i = 0; i < selectRow.length; i++) {
			var row = selectRow[i];
			if(i == 0) {
				batchId = row["pkPrjcontrChgGuar"] + batchId;
			} else {
				batchId = row["pkPrjcontrChgGuar"] + "," + batchId;
			}
		}
		//删除数据
		jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarEditForm").formPlugin("remove",{batchId:batchId,url:url_del});
    });
    
    /**
	 * 刷新功能(只是刷新当前页，如果要刷新所有页面使用 load 方法)
	 */	 
    jQuery("#rzPrjcontrChgGuarModule .toolsbarPanel .refresh-btn").click(function(){
		jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarList").gridPlugin("reLoad",viewModel.queryData);
    });
    
//    //保存功能
//	jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarEdit .save-btn").click(function(){
//		if(viewModel.pageState()=="add"){
//			ko.mapping.fromJS(emptyData,viewModel.queryData);
//		}
//		var param = {
//			formData:ko.mapping.toJS(viewModel.editData),//要提交的数据
//			queryData:ko.mapping.toJS(viewModel.queryData),//修改完毕刷新表格的参数
//			editType:viewModel.pageState()//页面的状态(add：添加，edit:编辑)
//		}
//		jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarEditForm").formPlugin("save",param);
//	});
	
	//查找功能
	jQuery("#rzPrjcontrChgGuarModule .searchToolsbar .search-btn").click(function(){
		jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarList").gridPlugin("load",ko.mapping.toJS(viewModel.queryData));
	});
	
	//重置查询条件功能
	jQuery("#rzPrjcontrChgGuarModule .searchToolsbar .reset-btn").click(function(){
		ko.mapping.fromJS(emptyData,viewModel.queryData);
	});
	
	//编辑页返回
	jQuery("#rzPrjcontrChgGuarModule .rzPrjcontrChgGuarEdit .back-btn").click(function(){
		$("#rzPrjcontrChgGuarModule").layoutMDI("back");
	});

	ko.applyBindings(viewModel);

});
//担保人参照回调函数
function guarRefCallFunction(eleObj, data, name, id) {
    var fun = viewModel.editData[name];
    if(typeof fun == 'function'){
        fun(data[id]);
    }
//    ko.mapping.fromJS(data,viewModel.editData);
}
//抵押物状态select切换
function changeSelect(obj){
    var rowIndex=$(obj).attr('rowIndex');
    var value= $(obj).val();
    gridObjBEdit.updateValueAt(rowIndex,"mortgageState",value,true);
}
function RzPrjcontrChgGuarView(){
	//主键
	this.pkPrjcontrChgGuar="";
	//合同变更主键
	this.pkPrjcontrChg="${pkPrjcontrChg}";
	//担保人（客户主键）
	this.pkCustomer="";
	//担保方式：0 信用、1 质押、2 抵押、3 保证、4 综合担保、5 其他
	this.guarType="";
	//担保金额
	this.guarAmt="";
	//抵押金额
	this.mortgageAmt="";
	//质押金额
	this.pledgeAmt="";
	//提供担保原因
	this.guarReson="";
	//是否原值
	this.isOri="";
	//备注
	this.remark="";
	//编辑页面状态
	this.enableState=true;
}

function RzPrjcontrChgGuarBView(){
    //主键
    this.pkPrjcontrChgGuarB="";
    //担保方信息主表主键
    this.pkPrjcontrChgGuar="";
    //项目合同主键
    this.pkPrjcontrChg="${pkPrjcontrChg}";
    //抵质押物数量
    this.mortgageNum="";
    //抵质押物质量
    this.mortgageQuality="";
    //抵质押物状态：0 未抵押、 1 已抵押
    this.mortgageState="";
    //状况
    this.situation="";
    //当前估值
    this.currVal="";
    //所在地
    this.address="";
    //抵质押物名称
    this.mortgageName="";
    //出厂日期
    this.prodDate="";
    //编辑页面状态
    this.enableState=true;
}

function getParams(selector){
	return {pkPrjcontrChg:"${pkPrjcontrChg}"};
}

</script>
	
</body>